CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    fullname VARCHAR(50) NOT NULL,
    mail VARCHAR(50) NOT NULL,
    logname VARCHAR(30) UNIQUE NOT NULL,
    pass VARCHAR(30) NOT NULL CHECK (LENGTH(pass) > 6 AND LENGTH(pass) < 30),
    nickname VARCHAR(30) DEFAULT 'Boss'
);

CREATE TABLE ngay (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    title VARCHAR(100) NOT NULL,
    dates DATE NOT NULL DEFAULT CURRENT_DATE,
    money DECIMAL(15,2) NOT NULL,
    type VARCHAR(20) NOT NULL DEFAULT 'Other',
    FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE user_totals (
    user_id INT PRIMARY KEY,
    total_money DECIMAL(15,2) NOT NULL DEFAULT 0,
    FOREIGN KEY (user_id) REFERENCES users(id)
);
DELIMITER $$
CREATE TRIGGER tg_ngay_after_insert
AFTER INSERT ON ngay
FOR EACH ROW
BEGIN
  INSERT INTO user_totals (user_id, total_money)
    VALUES (NEW.user_id, NEW.money)
    ON DUPLICATE KEY UPDATE total_money = total_money + NEW.money;
END$$
DELIMITER ;
DELIMITER $$
CREATE TRIGGER tg_ngay_after_update
AFTER UPDATE ON ngay
FOR EACH ROW
BEGIN
  UPDATE user_totals
    SET total_money = total_money - OLD.money + NEW.money
    WHERE user_id = NEW.user_id;
END$$
DELIMITER ;
DELIMITER $$
CREATE TRIGGER tg_ngay_after_delete
AFTER DELETE ON ngay
FOR EACH ROW
BEGIN
  UPDATE user_totals
    SET total_money = total_money - OLD.money
    WHERE user_id = OLD.user_id;
END$$
DELIMITER ;